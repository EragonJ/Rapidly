#!/usr/bin/env node

// # vim: filetype=javascript

var fs = require('fs'),
    util = require('util'),
    program = require('commander');

program
    .version('0.0.4')
    .option('build [schemaName]', 'Build Necessary Files/Directories')
    .option('--rebuild', 'Rebuild the Schema File ')
    .parse( process.argv );

if ( !!program.build ) {

    if ( typeof program.build !== 'string' ) {

        console.log('schemaName not found');
        return false;
    }

    var schemaName = program.build;
    build( schemaName );
}

function build( schemaName ) {

    var cwd = process.cwd()                                          // ~/Sites/Test/
    ,   schemaFileName = schemaName + '.js'                          // user.js
    ,   routeRootDirPath = cwd + '/routes/'                          // ~/Sites/Test/routes/
    ,   schemaRootDirPath = cwd + '/schema/'                         // ~/Sites/Test/schema/
    ,   routePath = routeRootDirPath + schemaName + '/'              // ~/Sites/Test/routes/user/
    ,   schemaFilePath = schemaRootDirPath + schemaFileName          // ~/Sites/Test/schema/user.js
    ,   templateRootDirPath = __dirname + '/../template/'            // node_modules/rapidly/template/
    ,   templatePathOf = {
        "schema" : templateRootDirPath + 'schema.js',                // node_modules/rapidly/template/schema.js
        "create" : templateRootDirPath + 'create.js',                // node_modules/rapidly/template/create.js
        "read"   : templateRootDirPath + 'read.js',                  // node_modules/rapidly/template/read.js
        "update" : templateRootDirPath + 'update.js',                // node_modules/rapidly/template/update.js
        "delete" : templateRootDirPath + 'delete.js',                // node_modules/rapidly/template/delete.js
    }
    ,   actions = ['create', 'read', 'update', 'delete'];            // This would create : 
                                                                     // ~/Sites/Test/routes/user/create.js
                                                                     // ~/Sites/Test/routes/user/read.js
                                                                     // ~/Sites/Test/routes/user/update.js
                                                                     // ~/Sites/Test/routes/user/delete.js

    // Check Route Root Directory exists or not
    fs.exists( routeRootDirPath, function( exists ) {
        if ( !exists ) {
            fs.mkdirSync( routeRootDirPath );
        }
    });

    // Check Schema Root Directory exists or not
    fs.exists( schemaRootDirPath, function( exists ) {
        if ( !exists ) {
            fs.mkdirSync( schemaRootDirPath );
        }
    });

    // Check Route Path Directory exists or not
    fs.exists( routePath, function( exists ) {
        if ( !exists ) {
            fs.mkdirSync( routePath );
        }
    });

    // Chech SchemaFile exists or not
    fs.exists( schemaFilePath, function( exists ) {

        if ( exists && !program.rebuild ) {

            console.log('You have already defined the schema : ' + schemaName + ' (' + schemaFilePath + ')' );
            console.log('Overwite it with --rebuild option');
            return false;
        }

        copy( templatePathOf['schema'], schemaFilePath );

        for ( var i in actions ) {
            copy( templatePathOf[ actions[i] ], routePath + actions[i] + '.js' );
        }
    });
}

function copy( inputFilePath, outputFilePath ) {

    var is = fs.createReadStream( inputFilePath ),
        os = fs.createWriteStream( outputFilePath );

    util.pump(is, os, function() {
        console.log('Copy to ' + outputFilePath + ' completed.');
    });
}
